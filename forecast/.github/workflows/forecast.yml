name: forecast-from-release

on:
  schedule:
    - cron: "0 6 * * *"   # cada 24h a las 06:00 UTC (~03:00 Chile)
  workflow_dispatch: {}    # ejecución manual

permissions:
  contents: write

env:
  RELEASE_TAG: ia2                 # <-- tag del release (tu captura)
  CALLS_ASSET: rf_calls.pkl        # <-- nombre exacto del asset
  TMO_ASSET:   rf_tmo.pkl

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          pip install -r requirements.txt
          sudo apt-get update -y
          sudo apt-get install -y jq

      - name: Download models from Release tag
        env:
          GH_REPO: ${{ github.repository }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          mkdir -p models
          API="https://api.github.com/repos/${GH_REPO}/releases/tags/${RELEASE_TAG}"
          echo "Consultando ${API}"
          REL_JSON=$(curl -sSL -H "Authorization: Bearer ${GH_TOKEN}" -H "Accept: application/vnd.github+json" "${API}")

          CALLS_URL=$(echo "$REL_JSON" | jq -r '.assets[] | select(.name=="'"${CALLS_ASSET}"'") | .url')
          TMO_URL=$(  echo "$REL_JSON" | jq -r '.assets[] | select(.name=="'"${TMO_ASSET}"'")   | .url')

          if [ -z "$CALLS_URL" ] || [ -z "$TMO_URL" ]; then
            echo "No se encontraron assets ${CALLS_ASSET} o ${TMO_ASSET} en el release ${RELEASE_TAG}"
            exit 1
          fi

          curl -sSL -H "Authorization: Bearer ${GH_TOKEN}" -H "Accept: application/octet-stream" "$CALLS_URL" -o models/${CALLS_ASSET}
          curl -sSL -H "Authorization: Bearer ${GH_TOKEN}" -H "Accept: application/octet-stream" "$TMO_URL"   -o models/${TMO_ASSET}
          ls -lh models/

      - name: Inference (próximas 24h, intervalos 60min)
        run: |
          START="$(date -u +'%Y-%m-%d 00:00')"
          END="$(date -u -d '+1 day' +'%Y-%m-%d 00:00')"
          python infer.py --start "$START" --end "$END" --interval_min 60

      - name: Commit JSON
        run: |
          git config user.name "github-actions"
          git config user.email "actions@users.noreply.github.com"
          git add out/forecast.json || true
          git commit -m "chore: daily forecast (from release ${RELEASE_TAG})" || echo "No changes"
          git push
